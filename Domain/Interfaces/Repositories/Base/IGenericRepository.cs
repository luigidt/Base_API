using Domain.Aggregates;
using Domain.Interfaces.Entities.Base;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using System.Threading.Tasks;

namespace Domain.Interfaces.Repositories.Base
{
    public interface IGenericRepository<TModel>
        where TModel : class, IEntity
    {
        Task<TReturnDTO?> GetById<TReturnDTO>(int id);

        Task<PagedResult<TReturnDTO>> PagedList<TReturnDTO, TFilter>(TFilter filter, int pageNumber, int pageSize);

        Task<List<TReturnDTO>> List<TReturnDTO, TFilter>(TFilter filter);

        Task<int> Count<TFilter>(TFilter filter);

        Task<bool> Exist<TFilter>(TFilter filter);

        Task<IAutoGeneratedValue> Insert(TModel model);

        Task<IAutoGeneratedValue> Update(TModel entity);

        Task<bool> Delete<TEntity>(int id);
    }

    public interface IAutoGeneratedValue
    {
        int Id { get; }
    }
}
